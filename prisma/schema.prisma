generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model list_notification_types {
  notification_type  String               @db.VarChar
  xata_id            String               @unique(map: "list_notification_types__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version       Int                  @default(0)
  xata_createdat     DateTime             @default(now()) @db.Timestamptz(6)
  xata_updatedat     DateTime             @default(now()) @db.Timestamptz(6)
  user_notifications user_notifications[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model list_reward_reasons {
  reward_reason  String    @db.VarChar
  xata_id        String    @unique(map: "list_reward_reasons__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int       @default(0)
  xata_createdat DateTime  @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime  @default(now()) @db.Timestamptz(6)
  rewards        rewards[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model list_snippet_types {
  snippet_type   String   @db.VarChar
  xata_id        String   @unique(map: "list_snippet_types__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model rewards {
  rewarded_user_id    String?
  rewarded_xp         Int
  rewarded_reason     String?
  xata_version        Int                  @default(0)
  xata_createdat      DateTime             @default(now()) @db.Timestamptz(6)
  xata_updatedat      DateTime             @default(now()) @db.Timestamptz(6)
  xata_id             String               @unique(map: "rewards__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  list_reward_reasons list_reward_reasons? @relation(fields: [rewarded_reason], references: [xata_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model snippet_likes {
  snippet_id     String?
  liked_by       String?
  xata_updatedat DateTime  @default(now()) @db.Timestamptz(6)
  xata_id        String    @unique(map: "snippet_likes__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int       @default(0)
  xata_createdat DateTime  @default(now()) @db.Timestamptz(6)
  snippets       snippets? @relation(fields: [snippet_id], references: [xata_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model snippet_notes {
  snippet_id     String?
  note           String
  noted_by       String?
  xata_id        String    @unique(map: "snippet_notes__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int       @default(0)
  xata_createdat DateTime  @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime  @default(now()) @db.Timestamptz(6)
  snippets       snippets? @relation(fields: [snippet_id], references: [xata_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model snippet_saves {
  snippet_id     String?
  saved_by       String?
  xata_updatedat DateTime  @default(now()) @db.Timestamptz(6)
  xata_id        String    @unique(map: "snippet_saves__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int       @default(0)
  xata_createdat DateTime  @default(now()) @db.Timestamptz(6)
  snippets       snippets? @relation(fields: [snippet_id], references: [xata_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model snippet_type_and_data_mapping {
  snippet_id     String?
  type           String?
  data           Json
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  xata_id        String   @unique(map: "snippet_type_and_data_mapping__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model snippets {
  generated_by_ai Boolean?        @default(true)
  likes_count     BigInt          @default(0)
  requested_by    String?
  xata_version    Int             @default(0)
  xata_createdat  DateTime        @default(now()) @db.Timestamptz(6)
  xata_updatedat  DateTime        @default(now()) @db.Timestamptz(6)
  xata_id         String          @unique(map: "snippets__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  snippet_title   String          @db.VarChar(255)
  snippet_likes   snippet_likes[]
  snippet_notes   snippet_notes[]
  snippet_saves   snippet_saves[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model user_notifications {
  notification_creator    String?
  notification_receiver   String?
  notification_type       String?
  notification            String
  is_read                 Boolean?                 @default(false)
  is_cleared              Boolean?                 @default(false)
  xata_createdat          DateTime                 @default(now()) @db.Timestamptz(6)
  xata_updatedat          DateTime                 @default(now()) @db.Timestamptz(6)
  xata_id                 String                   @unique(map: "user_notifications__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version            Int                      @default(0)
  list_notification_types list_notification_types? @relation(fields: [notification_type], references: [xata_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model users {
  first_name        String   @default("aIQ User") @db.VarChar
  last_name         String?  @db.VarChar
  email             String   @db.VarChar
  total_rewarded_xp BigInt   @default(0)
  xata_createdat    DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat    DateTime @default(now()) @db.Timestamptz(6)
  xata_id           String   @unique(map: "users__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version      Int      @default(0)
}
